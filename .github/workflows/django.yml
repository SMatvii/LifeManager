name: Django CI

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/**'
      - 'finassistant/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/**'
      - 'finassistant/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    env:
      DJANGO_SETTINGS_MODULE: finassistant.settings
      SECRET_KEY: test-secret-key-for-github-actions-ci
      DEBUG: 'False'
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gettext
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check Django setup
      working-directory: ./finassistant
      run: |
        python manage.py check --deploy
    
    - name: Run migrations
      working-directory: ./finassistant
      run: |
        python manage.py makemigrations --check --dry-run
        python manage.py migrate
    
    - name: Collect static files
      working-directory: ./finassistant
      run: |
        python manage.py collectstatic --noinput --verbosity=0
    
    - name: Run tests with coverage
      working-directory: ./finassistant
      run: |
        python -m pytest --cov=core --cov-report=term-missing --cov-report=xml --cov-fail-under=70 -v --tb=short
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./finassistant/coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run Black (code formatting check)
      run: |
        black --check --diff finassistant/
    
    - name: Run isort (import sorting check)  
      run: |
        isort --check-only --diff finassistant/
    
    - name: Run flake8 (code linting)
      run: |
        flake8 finassistant/ --max-line-length=100 --extend-ignore=E203,W503

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install security dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        pip install -r requirements.txt
    
    - name: Run Bandit (security linting)
      run: |
        bandit -r finassistant/ -f json -o bandit-report.json || true
    
    - name: Run Safety (dependency vulnerability check)
      run: |
        safety check --json --output safety-report.json || true