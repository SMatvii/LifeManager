name: Django CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.11']

    env:
      DJANGO_SETTINGS_MODULE: finassistant.settings
      SECRET_KEY: test-secret-key-for-github-actions
      DEBUG: 'False'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gettext
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "âœ… Installed packages:"
        pip list
    
    - name: Verify Django installation
      run: |
        python -c "import django; print(f'Django version: {django.get_version()}')"
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
    
    - name: Check project files
      run: |
        echo "Project structure:"
        ls -la
        echo "finassistant directory:"
        ls -la finassistant/
        echo "core app:"
        ls -la finassistant/core/
        echo "manage.py content:"
        head -20 finassistant/manage.py
    
    - name: Django system check
      working-directory: ./finassistant
      run: |
        export DJANGO_SETTINGS_MODULE=finassistant.settings
        export SECRET_KEY=test-secret-key-for-github-actions
        python manage.py check
    
    - name: Run migrations
      working-directory: ./finassistant
      run: |
        export DJANGO_SETTINGS_MODULE=finassistant.settings
        export SECRET_KEY=test-secret-key-for-github-actions
        python manage.py makemigrations --dry-run --check
        python manage.py migrate
    
    - name: Collect static files
      working-directory: ./finassistant
      run: |
        export DJANGO_SETTINGS_MODULE=finassistant.settings
        export SECRET_KEY=test-secret-key-for-github-actions
        mkdir -p static
        python manage.py collectstatic --noinput
    
    - name: Run Django tests
      working-directory: ./finassistant
      run: |
        export DJANGO_SETTINGS_MODULE=finassistant.settings
        export SECRET_KEY=test-secret-key-for-github-actions
        python manage.py test --verbosity=2
    
    - name: Check important files exist
      run: |
        echo "Checking documentation files..."
        if [ -f README.md ]; then 
          echo "README.md exists ($(wc -l < README.md) lines)"
        else 
          echo " README.md missing"
          exit 1
        fi
        
        if [ -f LICENSE ]; then 
          echo "LICENSE exists"
        else 
          echo "LICENSE missing"
          exit 1
        fi
        
        if [ -f requirements.txt ]; then 
          echo "requirements.txt exists ($(wc -l < requirements.txt) packages)"
        else 
          echo "requirements.txt missing"
          exit 1
        fi
        
        echo "All required files are present!"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 finassistant/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
        # exit-zero treats all errors as warnings
        flake8 finassistant/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics