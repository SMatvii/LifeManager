name: Django CI & Repo Health

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  check-repo-files:
    name: Check LICENSE, README, and requirements.txt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check LICENSE exists and not empty
        run: |
          if [ ! -s LICENSE ]; then
            echo "LICENSE file is missing or empty."
            exit 1
          fi

      - name: Check README.md exists and not empty
        run: |
          if [ ! -s README.md ]; then
            echo "README.md file is missing or empty."
            exit 1
          fi

      - name: Check requirements.txt exists and not empty
        run: |
          if [ ! -s requirements.txt ]; then
            echo "requirements.txt file is missing or empty."
            exit 1
          fi

  django-tests:
    name: Django Tests
    runs-on: ubuntu-latest
    needs: check-repo-files
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DJANGO_SETTINGS_MODULE: config.settings
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django checks
        run: python manage.py check

      - name: Apply migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test